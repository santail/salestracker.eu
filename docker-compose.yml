version: '3.8'

services:
  scraper-service:
    build:
      context: .
      dockerfile: infra/dockerfiles/scraper-service.Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/salestracker
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - PROXY_API_URL=${PROXY_API_URL}
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch

  public-portal-api:
    build:
      context: .
      dockerfile: infra/dockerfiles/public-portal-api.Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/salestracker
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch

  public-portal-frontend:
    build:
      context: .
      dockerfile: infra/dockerfiles/public-portal-frontend.Dockerfile
    environment:
      - REACT_APP_API_URL=http://localhost:3000
    ports:
      - "80:80"
    depends_on:
      - public-portal-api

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=salestracker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

volumes:
  postgres_data:
  rabbitmq_data:
  elasticsearch_data: