version: '3.7'
services:
          
  web-admin:
    container_name: web-admin
    build:
      context: ./salestracker.eu-admin/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./salestracker.eu-admin/:/usr/src/app/
      - ./salestracker.eu-shared/uploads/:/usr/src/app/uploads/
      - web-admin-modules:/usr/src/app/node_modules # will statically map node_modules folder to container. Should clean-up on each package.json change with docker rm -v containerId
      - web-admin-public:/usr/src/app/public/lib # will statically map public/lib folder to container. Should clean-up on each bower.json change with docker rm -v containerId
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MONGODB_URI=mongodb://mongodb:27017/salestracker-dev
      - PORT=8000
      - REDIS_ADDR=redis://redis:6379
      - NODE_ENV=development
    links:
      - "server-elasticsearch:elasticsearch"
      - "server-mongodb:mongodb"
      - "server-redis:redis"
    depends_on:
      - server-elasticsearch
      - server-mongodb
      - server-redis
      - tools-seeds
    restart: on-failure
    networks:
      - networks-backend-elasticsearch
      - networks-backend-mongodb
      - networks-backend-redis

  web-public:
    container_name: web-public
    build:
      context: ./salestracker.eu-public/
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    volumes:
      - ./salestracker.eu-public/:/usr/src/app/
      - ./salestracker.eu-shared/uploads/:/usr/src/app/uploads/
      - web-public-modules:/usr/src/app/node_modules # will statically map node_modules folder to container. Should clean-up on each package.json change with docker rm -v containerId
      - web-public-public:/usr/src/app/public/lib # will statically map public/lib folder to container. Should clean-up on each bower.json change with docker rm -v containerId
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MONGODB_URI=mongodb://mongodb:27017/salestracker-dev
      - PORT=9000
      - REDIS_ADDR=redis://redis:6379
      - NODE_ENV=development
      - MONGO_SEED=true
    links:
      - "server-elasticsearch:elasticsearch"
      - "server-mongodb:mongodb"
      - "server-redis:redis"

  backend-finder:
    container_name: backend-finder
    build:
      context: ./salestracker.eu-finder/
      dockerfile: Dockerfile
    ports:
      - "9229:9229"
    volumes:
      - ./salestracker.eu-finder/:/usr/src/app/
      - ./salestracker.eu-shared/config/:/usr/src/app/config/
      - ./salestracker.eu-shared/lib/:/usr/src/app/lib/
      - backend-finder-modules:/usr/src/app/node_modules
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MONGODB_URI=mongodb://mongodb:27017/salestracker-dev
      - NODE_ENV=development
      - REDIS_ADDR=redis://redis:6379
    links:
      - "server-elasticsearch:elasticsearch"
      - "server-mongodb:mongodb"
      - "server-redis:redis"
    depends_on:
      - server-elasticsearch
      - server-mongodb
      - server-redis
      - tools-seeds
      - backend-processor
    restart: on-failure
    networks:
      - networks-backend-elasticsearch
      - networks-backend-mongodb
      - networks-backend-redis

  backend-harvester:
    container_name: backend-harvester
    build:
      context: ./salestracker.eu-harvester/
      dockerfile: Dockerfile
    volumes:
      - ./salestracker.eu-harvester/:/usr/src/app/
      - ./salestracker.eu-shared/config/:/usr/src/app/config/
      - ./salestracker.eu-shared/lib/:/usr/src/app/lib/
      - ./salestracker.eu-shared/uploads/:/usr/src/app/uploads/
      - backend-harvester-modules:/usr/src/app/node_modules
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MONGODB_URI=mongodb://mongodb:27017/salestracker-dev
      - REDIS_ADDR=redis://redis:6379
      - NODE_ENV=development
      - PAGING_PAGES_LIMIT=1
      - OFFERS_LIMIT=1
    links:
      - "server-elasticsearch:elasticsearch"
      - "server-mongodb:mongodb"
      - "server-redis:redis"
    depends_on:
      - server-elasticsearch
      - server-mongodb
      - server-redis
      - tools-seeds
      - backend-processor
    restart: on-failure    
    networks:
      - networks-backend-elasticsearch
      - networks-backend-mongodb
      - networks-backend-redis

  backend-janitor:
    container_name: backend-janitor
    build:
      context: ./salestracker.eu-janitor/
      dockerfile: Dockerfile
    volumes:
      - ./salestracker.eu-janitor/:/usr/src/app/
      - ./salestracker.eu-shared/config/:/usr/src/app/config/
      - ./salestracker.eu-shared/lib/:/usr/src/app/lib/
      - backend-janitor-modules:/usr/src/app/node_modules
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MONGODB_URI=mongodb://mongodb:27017/salestracker-dev
      - REDIS_ADDR=redis://redis:6379
      - NODE_ENV=development
    links:
      - "server-elasticsearch:elasticsearch"
      - "server-mongodb:mongodb"
      - "server-redis:redis"
    depends_on:
      - server-elasticsearch
      - server-mongodb
      - server-redis
      - tools-seeds
      - backend-processor
    restart: on-failure    
    networks:
      - networks-backend-elasticsearch
      - networks-backend-mongodb
      - networks-backend-redis

  backend-notifier:
    container_name: backend-notifier
    build:
      context: ./salestracker.eu-notifier/
      dockerfile: Dockerfile
    volumes:
      - ./salestracker.eu-notifier/:/usr/src/app/
      - ./salestracker.eu-shared/config/:/usr/src/app/config/
      - ./salestracker.eu-shared/lib/:/usr/src/app/lib/
      - backend-notifier-modules:/usr/src/app/node_modules
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/salestracker-dev
      - REDIS_ADDR=redis://redis:6379
      - TELEGRAM_API_TOKEN=${TELEGRAM_API_TOKEN}
      - NODE_ENV=development
    links:
      - "server-mongodb:mongodb"
      - "server-redis:redis"
    depends_on:
      - server-mongodb
      - server-redis
    restart: on-failure    
    networks:
      - networks-backend-mongodb
      - networks-backend-redis

  backend-processor:
    container_name: backend-processor
    build:
      context: ./salestracker.eu-processor/
      dockerfile: Dockerfile
    volumes:
      - ./salestracker.eu-processor/:/usr/src/app/
      - ./salestracker.eu-shared/config/:/usr/src/app/config/
      - ./salestracker.eu-shared/lib/:/usr/src/app/lib/
      - ./salestracker.eu-shared/uploads/:/usr/src/app/uploads/
      - backend-processor-modules:/usr/src/app/node_modules
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MONGODB_URI=mongodb://mongodb:27017/salestracker-dev
      - REDIS_ADDR=redis://redis:6379
      - NODE_ENV=development
      - SHOULD_HARVEST_PICTURES=true
    links:
      - "server-elasticsearch:elasticsearch"
      - "server-mongodb:mongodb"
      - "server-redis:redis"
    depends_on:
      - server-elasticsearch
      - server-mongodb
      - server-redis
      - tools-seeds
    restart: on-failure
    networks:
      - networks-backend-elasticsearch
      - networks-backend-mongodb
      - networks-backend-redis

  server-mongodb:
    container_name: server-mongodb
    image: mongo:latest
    restart: on-failure
    networks:
      - networks-backend-mongodb
    healthcheck:
      test:
        - CMD
        - mongo
        - --eval
        - "db.adminCommand('ping')"
    volumes:
      - "./.data/mongodb:/data/db"
    ports:
      - "27017:27017"

  server-redis:
    container_name: server-redis
    image: redis
    restart: on-failure
    networks:
      - networks-backend-redis
    volumes:
      - ./.data/redis:/data
    ports:
      - "6379:6379"

  server-elasticsearch:
    image: elasticsearch:6.4.2
    restart: on-failure
    container_name: server-elasticsearch
    command: elasticsearch -Ecluster.name=salestracker -Ebootstrap.memory_lock=true -Ehttp.port=9200 -Ehttp.cors.allow-origin="http://localhost:1358" -Ehttp.cors.enabled=true -Ehttp.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization -Ehttp.cors.allow-credentials=true
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - networks-backend-elasticsearch
    volumes:
      - ./.data/elasticsearch:/usr/share/elasticsearch/data
    healthcheck:
        test: curl -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
        interval: 30s
        timeout: 10s
        retries: 5
        start_period: 60s

  tools-mongodb-commander:
    image: mongo-express
    restart: on-failure
    container_name: tools-mongodb-commander
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_URI: mongodb://admin:pass@mongodb:27017/salestracker-dev
      VCAP_APP_PORT: 8082
    links:
      - "server-mongodb:mongodb"
    depends_on:
      - server-mongodb
    ports:
      - "8082:8082"
    networks:
      - networks-backend-mongodb

  tools-kue-ui:
    image: christophwitzko/kue-ui
    restart: on-failure
    hostname: kui-ui
    container_name: tools-kui-ui
    links:
      - "server-redis:redis"
    depends_on:
      - server-redis
    environment:
      KUE_PREFIX: q
    ports:
      - "5000:5000"
    networks:
      - networks-backend-redis

  tools-mailcatcher:
    image: schickling/mailcatcher:latest
    container_name: tools-mailcatcher
    hostname: mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"

  tools-seeds:
    container_name: tools-seeds
    build:
      context: ./salestracker.eu-seeds/
      dockerfile: Dockerfile
    environment:
      DB_URI: mongodb://mongodb:27017/salestracker-dev
      DROP_DATABASE: "true"
      REPLACE_ID: "true"
    links:
      - "server-mongodb:mongodb"
    networks:
      - networks-backend-mongodb
    depends_on:
      - server-mongodb

networks:
  networks-backend-elasticsearch:
  networks-backend-mongodb:
  networks-backend-redis:

volumes:
  web-admin-modules:
  web-admin-public:
  web-public-modules:
  web-public-public:
  backend-finder-modules:
  backend-harvester-modules:
  backend-janitor-modules:
  backend-notifier-modules:
  backend-processor-modules: